// Generated by CoffeeScript 1.3.3
(function() {

  $.fn.SpaceFrame = function() {
    var bottomPanels, clipPanels, contents, layerIndex, leftPanels, maxContentHeight, maxContentWidth, panelFour, panelOne, panelThree, panelTwo, rightPanels, scrubber, topPanels;
    maxContentWidth = null;
    maxContentHeight = null;
    scrubber = this.find('.space-scrubber');
    contents = this.find('.space-content');
    panelOne = contents.filter('.left').not('.bottom');
    panelTwo = contents.filter('.right').not('.bottom');
    panelThree = contents.filter('.left.bottom');
    panelFour = contents.filter('.right.bottom');
    leftPanels = panelOne.add(panelThree);
    rightPanels = panelTwo.add(panelFour);
    topPanels = panelOne.add(panelTwo);
    bottomPanels = panelThree.add(panelFour);
    scrubber.css({
      position: 'absolute',
      zIndex: contents.length + 1
    });
    contents.css({
      position: 'absolute',
      overflow: 'hidden'
    });
    this.css({
      position: 'relative',
      width: function() {
        contents.each(function() {
          if (!$(this).is(':empty')) {
            return maxContentWidth = Math.max(maxContentWidth, $(this).width());
          }
        });
        return maxContentWidth;
      },
      height: function() {
        contents.each(function() {
          if (!$(this).is(':empty')) {
            return maxContentHeight = Math.max(maxContentHeight, $(this).height());
          }
        });
        return maxContentHeight;
      }
    });
    console.log(this.css('width'));
    topPanels.css({
      top: 0
    });
    bottomPanels.css({
      bottom: 0
    });
    rightPanels.css({
      right: 0
    });
    leftPanels.css({
      left: 0
    });
    layerIndex = contents.length;
    contents.each(function() {
      $(this).css({
        zIndex: layerIndex
      });
      return layerIndex--;
    });
    clipPanels = function() {};
    scrubber.on({
      touchmove: function(e) {
        var xPos, yPos;
        e.preventDefault();
        xPos = e.originalEvent.changedTouches[0].pageX;
        return yPos = e.originalEvent.changedTouches[0].pageY;
      }
    });
    return scrubber.on({
      click: function() {
        return $(this).trigger('touchmove');
      }
    });
  };

}).call(this);
